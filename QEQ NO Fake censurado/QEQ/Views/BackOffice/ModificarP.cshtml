@model QEQ.Models.Personaje
@using QEQ.Models
@{
    ViewBag.Title = "ModificarP";
}
<h2>Modifica el personaje @ViewBag.Nombre </h2>
@using (Html.BeginForm("ModificarP", "BackOffice", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.Label("Personaje: ")
    <label>@ViewBag.Nombre</label> <br />
    @Html.Label("Nuevo nombre") @Html.TextBoxFor(P => P.Nombre, new { @required = "required", value = Model.Nombre }) <br />
    @Html.Label("Cargar Fotito nueva") @Html.TextBoxFor(x => x.Foto, new { type = "file", required = "required" })<br />
    @Html.Label("Categoria") @Html.DropDownListFor(P => P.idCategoria, new SelectList(ViewBag.ListaCat, "Id", "Nombre")) <br />
    int i = 0;
    Model.Preguntas = new List<Preg>();
    foreach (string Grupo in ViewBag.PregsXGrupo.Keys)
    {
        @Html.Label(Grupo)<br />
        Model.Preguntas.Add(new Preg());
        @Html.RadioButtonFor(P => P.Preguntas[i], new Preg(-1, "fake", -1))
        @Html.Label("No")<br />
        foreach (Preg pregunta in ViewBag.PregsxGrupo[Grupo])
        {
            @Html.RadioButtonFor(P => P.Preguntas[i], pregunta)
            @Html.Label(pregunta.Texto)<br />

        }
        if (Model.Preguntas[i] != new Preg(-1, "fake", -1))
        {
            i++;
        }
        else
        {
            Model.Preguntas.RemoveAt(i);
        }
    }
    <input type="submit" value="Proceder" />
}